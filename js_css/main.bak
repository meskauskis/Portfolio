$(function() {
	$pageNav = $('.page-nav');
	$pageSide = $('.page-side');
	$thumbHolder = $('.thumbnails-holder');
	var menuArrowVal = $('#menu-toggle').find('span').text();
	var menuArrowVal2 = $('#menu-toggle').attr('data-attr');

	// get the cookie setting
	function getCookie(cookieName) {
		var i, x, y;
		var ARRcookies = document.cookie.split(";");
	
		for (i=0; i<ARRcookies.length; i++) {
			x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
			y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
			x = x.replace(/^\s+|\s+$/g,"");
	
			if (x === cookieName) {
				return unescape(y);
			}
		}
	}

	// cookie to track nav bar state
	function setCookie(cookieName, value, suggestedDays) {
		var exdate = new Date();
		exdate.setDate(exdate.getDate() + suggestedDays);
		
		var cookieValue = escape(value) + ((suggestedDays === null) ? "" : "; expires=" + exdate.toUTCString());
		document.cookie = cookieName + "=" + cookieValue;
	}

	(function() {
		// toggle menu based off of cookie settings
		if (getCookie('navStatus') === 'open') {
			$pageSide.removeClass('closed');
		}

		// set selected nav item (variable set in head)
		if (navSelected != '') {
			$('.' + navSelected).addClass('selected');
		}
	})();

	// click event for toggling menu
	$('#menu-toggle').click(function() {
		var isClosed = $(this).closest('.page-side').hasClass('closed');
		$pageSide.toggleClass('closed');

		if (isClosed === true) {
			setCookie('navStatus', 'open', 30);
		} else {
			setCookie('navStatus', 'closed', 30);
		}
	});

	// homepage carousel items
	$carouselMain = $('.main-carousel');
	if ($carouselMain.length > 0) {
		(function() {
			$arrowPrev = $carouselMain.find('.arrow-l');
			$arrowNext = $carouselMain.find('.arrow-r');
			$overlay = $carouselMain.find('.overlay').find('span');
			$icons = $carouselMain.siblings('.affordance').find('.slide-icon');
			var slideCount = $('.main-carousel').find('.slide').length;
			var counterCurrent = 0;
			var carouselSpeed = 900;
			var imgLoaded = true;
			var autoScrolling = true;

			$carouselMain.find('.slide:first').addClass('slide-main');

			var slideTitle = $carouselMain.find('.slide').eq(0).attr('data-title');
			$overlay.text(slideTitle);

			$arrowPrev.click(function() {
				if (imgLoaded === true) {
					counterCurrent = (counterCurrent == 0) ? (slideCount - 1) : counterCurrent - 1;
					swapImage(counterCurrent);
				}
			});

			$arrowNext.click(function() {
				if (imgLoaded === true) {
					counterCurrent = (counterCurrent < (slideCount - 1)) ? counterCurrent + 1 : 0;
					swapImage(counterCurrent);
				}
			});

			function swapImage(counterCurrent) {
				$slideMain = $carouselMain.find('.slide-main');
				imgLoaded = false;
				var dataTitle = $carouselMain.find('.slide').eq(counterCurrent).attr('data-title');
	
				// update carousel indicator icon
				$icons.removeClass('selected');
				$icons.eq(counterCurrent).addClass('selected');
				// update overlay text
				$overlay.text(dataTitle);
				// fade in the new image
				$carouselMain.find('.slide').eq(counterCurrent).addClass('slide-next').animate({
					opacity: 1
				}, carouselSpeed, function() {
					$slideMain.removeClass('slide-main');
					$(this).removeClass('slide-next').addClass('slide-main').removeAttr('style');
					imgLoaded = true;
				});
			}

			// stop auto swapping on mouse over
			$carouselMain.mouseenter(function(){
				autoScrolling = false;
			}).mouseleave(function(){
				autoScrolling = true;
			});

			// start the auto swapping
			$(window).load(function(){
				setInterval(function() {
					if (autoScrolling == true && imgLoaded == true) { 
						counterCurrent = (counterCurrent < (slideCount - 1)) ? counterCurrent + 1 : 0;
						swapImage(counterCurrent);
					}
				}, 4000);
			});
		})();
	}

	// get the xml gallery images
	if (section != '') {
		var currentNum = 0;
		var galleryArray = [];

		// parse the XML content
		function parseXml(xml) {
			$thumbHolder.empty();
			
			$(xml).find(section.toUpperCase()).each(function(i, val) {
				var title = ($(this).find("TITLE").text() != '') ? $(this).find("TITLE").text() : '';
				var thumbnail = ($(this).find("THUMBNAIL").text() != '') ? $(this).find("THUMBNAIL").text() : '';
				var image = ($(this).find("IMAGE").text() != '') ? $(this).find("IMAGE").text() : '';
				var spec = ($(this).find("SPEC").text() != '') ? $(this).find("SPEC").text() : '';
				var link = ($(this).find("LINK").text() != '') ? $(this).find("LINK").text() : '';
				var videoPath = ($(this).find("VIDEO").text() != '') ? $(this).find("VIDEO").text() : '';

				// display videos differently
				if (videoPath != '' && $thumbHolder.length > 0) {
					var output = '';
					output += '<div class="video-item">';
						output += '<div class="video-wrap">';
							output += '<video width="345" height="230" preload="metadata" controls="controls">';
								output += '<source src="' + videoPath + '.webm" type=\'video/webm; codecs="vp8, vorbis"\' />';
								output += '<source src="' + videoPath + '.ogv" type=\'video/ogg; codecs="theora, vorbis"\' />';
								output += '<source src="' + videoPath + '.mp4" type=\'video/mp4; codecs="avc1.42E01E, mp4a.40.2"\'/>';
								output += '<a href="'+ videoPath +'.mp4" style="display:block; width:345px; height:230px" id="flash_player'+ currentNum +'">';
								output += '<img src="' + thumbnail + '"/>';
								output += '</a>';
							output += '</video>';
						output += '</div>';
						output += '<h4 class="item-title" title="' + title + '">' + title + '</h4>';
					output += '</div>';

					$thumbHolder.append(output);

					// embed the flash player
					$f("flash_player"+ currentNum, "/video/flowplayer-3.2.7.swf", {
						clip: { 
							autoPlay: true,
							autoBuffer: true
						},
						plugins: {
							controls: {
								url: '/video/flowplayer_controls-3.2.5.swf',
								left: 0,
								bottom: 0,
								opacity: 0.95,
								timeColor: '#980118',
								all: false,
								play: true,
								scrubber: true,
								tooltips: {
									buttons: true,
									fullscreen: 'Enter fullscreen mode'
								}
							}
						}
					});
				} else {
					galleryArray[currentNum] = {
						id: currentNum,
						section: section,
						title: title,
						thumbnail: thumbnail,
						image: image,
						spec: spec,
						link: link,
						video: videoPath
					};
				}
				currentNum++;
			});

			// gallery thumb tile page
			if (galleryArray.length > 0 && $thumbHolder.length > 0) {
				for (a = 0; a < galleryArray.length; a++ ) {
					var output = '';
					output += '<div class="thumbnail-item">';
						output += '<div class="thumbnail-wrap">';
							output += '<a href="/image.php?selected=' + galleryArray[a]['section'].toLowerCase() + '#' + (galleryArray[a]['id'] + 1) + '" title="View larger image">';
							output += '';
							output += '<img src="' + galleryArray[a]['thumbnail'] + '" class="thumbnail"/>';
							output += '<div class="overlay">';
								output += '<h4 class="item-title" title="' + galleryArray[a]['title'] + '">' + galleryArray[a]['title'] + '<div class="magnify icon-zoom-in"></div></h4>';
							output += '</div>';
							output += '</a>';
						output += '</div>';
						output += '<div class="details">';
							if (galleryArray[a]['spec'] != '') {
								output += galleryArray[a]['spec'];
							}
							if (galleryArray[a]['link'] != '') {
								output += '<a href="' + galleryArray[a]['link'] + '" title="View site" rel="nofollow" target="_blank">View Site</a>';
							}
						output += '</div>';
					output += '</div>';
					
					$thumbHolder.append(output);
				}
			}
			
			// large image page
			var $largeImageHolder = $('.large-image-wrap');
			if (galleryArray.length > 0 && $largeImageHolder.length > 0) {
				(function() {
					$arrowPrev = $largeImageHolder.find('.arrow-l');
					$arrowNext = $largeImageHolder.find('.arrow-r');
					$largeImage = $largeImageHolder.find('.large-image-main');
					var imgPrev = new Image();
					var imgNext = new Image();
					var imageNotSwapped = true;
					var imageLoaded = false;
					var imageTempPrev;
					var imageTempNext;
					var counterPreload;
					var counterCurrent;
					var counterPrev;
					var counterNext;
					var carouselSpeed = 600;
					var fadeSpeed = 250;
		
					// click event for previous arrow
					$arrowPrev.click(function() {
						if (imageLoaded === true) {
							counterCurrent--;
							currentImageCount();
							window.location = "#" + counterCurrent;
						}
					});
		
					// click event for next arrow
					$arrowNext.click(function() {
						if (imageLoaded === true) {
							counterCurrent++;
							currentImageCount();
							window.location = "#" + counterCurrent;
						}
					});
		
					// get hashtag for current image count
					function getHashtag() {
						counterCurrent = window.location.hash.substr(1);
						counterCurrent = counterCurrent * 1;
		
						if (counterCurrent <= 1) {
							window.location = "#" + 1;
						} else if (counterCurrent >= galleryArray.length) {
							window.location = "#" + galleryArray.length;
						}
					}

					// get the count for the previous and next image
					function currentImageCount() {
						counterPrev = counterCurrent - 1;
						counterNext = counterCurrent + 1;
						$arrowPrev.removeClass('hidden');
						$arrowNext.removeClass('hidden');

						// hide arrows if you're on first or last image
						if (counterCurrent <= 1) {
							counterPrev = 1;
							$arrowPrev.addClass('hidden');
						} else if (counterCurrent >= galleryArray.length) {
							counterNext = galleryArray.length;
							$arrowNext.addClass('hidden');
						}
					}

					// swap the main image
					function swapImg() {
						imageLoaded = false;
						getHashtag();
						currentImageCount();
		
						// build the page for the first time
						if (imageNotSwapped === true) {
							$largeImage.attr('src', galleryArray[counterCurrent - 1].image);
		
							// load in a previous image for quick switching
							imgPrev.src = galleryArray[counterPrev - 1].image;
							imgPrev.onload = function() {
								imageTempPrev = imgPrev.src;
								imageLoaded = true;
							}
		
							// load in the next image for quick switching
							imgNext.src = galleryArray[counterNext - 1].image;
							imgNext.onload = function() {
								imageTempNext = imgNext.src;
								imageLoaded = true;
							}
		
							counterPreload = counterCurrent;
							imageNotSwapped = false;
						} else {
							var currentImg = $largeImage.attr('src');
							var imageWidth = $largeImage.width();
			
							// previous direction
							if (counterCurrent < counterPreload) {
								imgPrev.src = galleryArray[counterPrev - 1].image;
								imgPrev.onload = function() {
									$largeImage.animate({
										opacity: 0,
										left: '+=' + (imageWidth / 3)
									}, carouselSpeed, function() {
										$(this).removeAttr('style').hide().attr('src', imageTempPrev).fadeIn(fadeSpeed);
										counterPreload = counterCurrent;
										imageTempPrev = imgPrev.src;
										imageTempNext = currentImg;
										imageLoaded = true;
									});
								}
							// next direction
							} else {
								imgNext.src = galleryArray[counterNext - 1].image;
								imgNext.onload = function() {
									$largeImage.animate({
										opacity: 0,
										left: '-=' + (imageWidth / 3)
									}, carouselSpeed, function() {
										$(this).removeAttr('style').hide().attr('src', imageTempNext).fadeIn(fadeSpeed);
										counterPreload = counterCurrent;
										imageTempPrev = currentImg;
										imageTempNext = imgNext.src;
										imageLoaded = true;
									});
								}
							}
						}
		
						// update title text
						$('#section-title').text(galleryArray[counterCurrent - 1].title);
					}
		
					// bbq plugin to change page on hash change
					$(window).bind("hashchange", swapImg);
					$(window).trigger("hashchange");
				})();
			}
		}

		// get the XML content
		$.ajax({
			type: "GET",
			url: "/includes/list.xml",
			dataType: "xml",
			success: parseXml,
			error:function(x,e) {
				if (x.status===0) {
					alert('Please Check Your Network');
				} else if (x.status===404) {
					alert('Requested URL not found');
				} else if (x.status===500) {
					alert('Internel Server Error');
				} else if (e==='parsererror') {
					alert('Error.\nParsing JSON Request failed');
				} else if (e==='timeout') {
					alert('Request Time out');
				}
			}
		});
	}

	/*
	// scale page title font
	//$('#page-title').fitText(1, { minFontSize: '30px', maxFontSize: '120px' });

	// change the order in which the thumbnails are displayed
	$('#sort_menu').change(function() {
		var value = $("#sort_menu option:selected").val();
		if (value == "new") {
			galleryArray.sort(function(a, b){
				return a.id-b.id;
			});
			write_thumbs();
		} else if (value == "old") {
			galleryArray.sort(function(a, b){
				return b.id-a.id;
			});
			write_thumbs();
		} else if (value == "a_z") {
			galleryArray.sort(function(a, b){ 
				var titleA=a.title.toLowerCase(), titleB=b.title.toLowerCase();
				if (titleA < titleB) { return -1 } else if (titleA > titleB) { return 1 } else { return 0 }
			});
			write_thumbs();
		} else if (value == "z_a") {
			galleryArray.sort(function(a, b){ 
				var titleA=a.title.toLowerCase(), titleB=b.title.toLowerCase();
				if (titleA > titleB) { return -1 } else if (titleA < titleB) { return 1 } else { return 0 }
			});
			write_thumbs();
		}
	});
	*/
});